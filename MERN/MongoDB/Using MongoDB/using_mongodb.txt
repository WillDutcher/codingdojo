Create a database calle d'my_first_db'
	use my_first_db

Create students collection
	db.createCollection('students')

Each document you insert into this collection should have the following format: ({name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: { month: NUMBER, day: NUMBER, year: NUMBER}})
	-

Create 5 students with the appropriate info
	db.students.insert({name: 'Alice', home_state: 'Arkansas', lucky_number: 1, birthday: {month: 1, day: 1, year: 2011}})
	db.students.insert({name: 'Brian', home_state: 'California', lucky_number: 2, birthday: {month: 2, day: 2, year: 2011}})
	db.students.insert({name: 'Carla', home_state: 'Colorado', lucky_number: 3, birthday: {month: 3, day: 3, year: 2011}})
	db.students.insert({name: 'David', home_state: 'Delaware', lucky_number: 4, birthday: {month: 4, day: 4, year: 2011}})
	db.students.insert({name: 'Ellen', home_state: 'Florida', lucky_number: 5, birthday: {month: 5, day: 5, year: 2011}})

Get all students
	db.students.find().pretty()

Retrieve all students who are from California (San Jose Dojo) or Washington (Seattle Dojo)
	db.students.find({home_state:{$in:['California', 'Colorado']}}).pretty()

Get all students whose lucky number is greater than 3
	db.students.find({lucky_number:{$gt:3}}).pretty()

Get all students whose lucky number is less than or equal to 10
	db.students.find({lucky_number:{$lte:10}}).pretty()

Get all students whose lucky number is between 1 and 9 (inclusive)
	db.students.find({lucky_number:{$gte:1, $lte:9}}).pretty()

Add a field to each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
	db.students.updateMany({}, {$set: {interests: ['coding', 'brunch', 'MongoDB']}})

Add some unique interests for each particular student into each of their interest arrays
	db.students.update({name: 'Alice'}, {$push: {interests: 'algebra'}})
	db.students.update({name: 'Brian'}, {$push: {interests: 'backgammon'}})
	db.students.update({name: 'Carla'}, {$push: {interests: 'checkers'}})
	db.students.update({name: 'David'}, {$push: {interests: 'Dungeons & Dragons'}})
	db.students.update({name: 'Ellen'}, {$push: {interests: 'electronic music'}})

Add the interest 'taxes' into someone's interest array
	db.students.update({name: 'Ellen'}, {$push: {interests: 'taxes'}})

Remove the 'taxes' interest you just added
	db.students.update({name: 'Ellen'}, {$pop: {interests: 1}})

Remove all students who are from California
	db.students.remove({home_state: 'California'})

Remove a student by name
	db.students.remove({name: 'Ellen'})

Remove a student whose lucky number is greater than 5
	db.students.remove({lucky_number: {$gt: 5}}, true)

Add a field to each student collection called 'number_of_belts' and set it to 0
	db.students.updateMany({}, {$set:{number_of_belts: 0}})

Increment this field by 1 for all students in Washington (Seattle Dojo)
	db.students.updateMany({home_state: 'Washington'}, {$set: {number_of_belts: 1}})

Rename the 'number_of_belts' field to 'belts_earned'
	db.students.updateMany({}, {$rename: {'number_of_belts': 'belts_earned'}})

Remove the 'lucky_number' field
	db.students.update({}, {$unset: {lucky_number: ""}}, false, true)

Add an 'updated_on' field and set the value as the current date
	db.students.updateMany({}, {$currentDate: {updated_on: {$type: "date"}}}) OR
	db.students.update({}, {$set: {updated_on: new Date()}}, {multi: true})